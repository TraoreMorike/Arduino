/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_MYPROTOFILES_SENSOR_PB_H_INCLUDED
#define PB_MYPROTOFILES_SENSOR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SensorMessage { 
    uint32_t sensor_uid; 
    float sensor_temperature; 
    float sensor_humidity; 
    float battery_voltage; 
} SensorMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SensorMessage_init_default               {0, 0, 0, 0}
#define SensorMessage_init_zero                  {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorMessage_sensor_uid_tag             1
#define SensorMessage_sensor_temperature_tag     2
#define SensorMessage_sensor_humidity_tag        3
#define SensorMessage_battery_voltage_tag        4

/* Struct field encoding specification for nanopb */
#define SensorMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   sensor_uid,        1) \
X(a, STATIC,   REQUIRED, FLOAT,    sensor_temperature,   2) \
X(a, STATIC,   REQUIRED, FLOAT,    sensor_humidity,   3) \
X(a, STATIC,   REQUIRED, FLOAT,    battery_voltage,   4)
#define SensorMessage_CALLBACK NULL
#define SensorMessage_DEFAULT NULL

extern const pb_msgdesc_t SensorMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SensorMessage_fields &SensorMessage_msg

/* Maximum encoded size of messages (where known) */
#define SensorMessage_size                       21

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
